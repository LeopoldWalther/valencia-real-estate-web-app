---

- name: "Install dependencies"
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false

  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "Install 'unzip'"
      apt:
        name: [ "unzip" ]
        state: latest
        update_cache: yes

  roles:
    - install-dependencies


- name: "AWS Login"
  hosts: web
  user: ubuntu
  become: true
  gather_facts: false

  vars:
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
  
  tasks:
    - name: Set aws_access_key_id
      shell: "aws configure set aws_access_key_id {{ AWS_ACCESS_KEY_ID }}"
    - name: Set aws_secret_access_key
      shell: "aws configure set aws_secret_access_key {{ AWS_SECRET_ACCESS_KEY }}"
    - name: Set default region
      shell: "aws configure set default.region {{ AWS_DEFAULT_REGION }}"

- name: "Get kubectl config"
  hosts: web
  user: ubuntu
  become: true
  gather_facts: false

  vars:
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"

  pre_tasks:
    - name: "Create kubeconfig file"
      shell: "aws eks update-kubeconfig --region {{ AWS_DEFAULT_REGION }} --name {{ ENVIRONMENT_NAME }}-cluster"
