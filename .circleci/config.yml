version: 2.1

commands:
  destroy-environment:
    description: Destroy cloudformation stacks given a workflow ID.
    parameters:
      Workflow_ID:
        type: string
        default: ${CIRCLE_WORKFLOW_ID:0:7}  
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environment: << parameters.Workflow_ID >> "
            aws cloudformation delete-stack \
              --stack-name "${ENVIRONMENT_NAME}-network"


jobs:
 
  test:
    docker:
      # Use the same Docker base as the project
      - image: python:3.9-buster

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build:
    docker:
      - image: cimg/go:1.17

    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      - run:
          name: Build Docker image
          command: |
            DOCKER_PATH=leopoldwalther/valencia-real-estate-report
            echo "Docker ID and Image: $DOCKER_PATH"

            docker build --tag=valencia-real-estate-report .

            # Authenticate & tag
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker tag valencia-real-estate-report $DOCKER_PATH:latest

            # Push image to a docker repository
            docker push $DOCKER_PATH:latest

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout

      - run:
          name: Deploy EKS network
          command: |
            TEMPLATE_FILE="infrastructure/eks-network.yml"
            PARAMETER_FILE="file://infrastructure/eks-network-parameters.json"

            aws cloudformation deploy \
              --stack-name ${ENVIRONMENT_NAME}-network \
              --template-file $TEMPLATE_FILE \
              --parameter-overrides $PARAMETER_FILE \
              --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" \
              --region $AWS_DEFAULT_REGION \
              --tags project=${ENVIRONMENT_NAME}-project 

      - run:
          name: Deploy EKS cluster
          command: |
            TEMPLATE_FILE="infrastructure/eks-cluster.yml"
            PARAMETER_FILE="file://infrastructure/eks-cluster-parameters.json"

            aws cloudformation deploy \
              --stack-name ${ENVIRONMENT_NAME}-cluster \
              --template-file $TEMPLATE_FILE \
              --parameter-overrides $PARAMETER_FILE \
              --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" \
              --region $AWS_DEFAULT_REGION \
              --tags project=${ENVIRONMENT_NAME}-project 


workflows:
  default: 

    jobs:
      - test
      - build:
          requires: [test]
      - deploy-infrastructure:
          requires: [build]

      
