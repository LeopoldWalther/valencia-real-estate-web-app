Description: >
    Leopold Walther:
    This template deploys ...


Parameters:

    EnvironmentName:
      Description: Environment name that will be prefixed to resource names
      Type: String
    
    EKSKeyPair:
      Description: Keypair for EC2 instance
      Type: AWS::EC2::KeyPair::KeyName
      Default: vlc-real-estate-app

    MinSize:
      Description: Min amount of web servers
      Type: Number
      Default: 2

    MaxSize:
      Description: Max amount of web servers
      Type: Number
      Default: 4

    DesiredSize:
      Description: Desired amount of web servers
      Type: Number
      Default: 2


Resources:

  EKSWorkerNodeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-EKSWorkerNodeRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Path: /


  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Sub ${EnvironmentName}-Cluster
      NodegroupName: !Sub ${EnvironmentName}-Nodegroup
      NodeRole: !GetAtt EKSWorkerNodeRole.Arn
      InstanceTypes:
        - t3.micro
      AmiType: AL2_x86_64
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${EnvironmentName}-PUB-NETS
      ScalingConfig:
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        DesiredSize: !Ref DesiredSize
      RemoteAccess:
        Ec2SshKey: !Ref EKSKeyPair

  JumpHostSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-JumpHostSecGroup
      GroupDescription: Allow Jump Host to SSH to WebServers
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  JumpHost:
    Type: AWS::EC2::Instance
    DependsOn:
    - JumpHostSecGroup
    Properties:
      KeyName: !Ref EKSKeyPair
      ImageId: ami-053b0d53c279acc90
      InstanceType: t2.micro
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        Description: ENI for jump host
        DeviceIndex: '0'
        GroupSet: 
          - Ref: JumpHostSecGroup
        SubnetId:
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-PUB1-SN"
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-JumpHost
  

Outputs:

  EKSWorkerNodeRole:
    Description: IAM role for workers with permissions for kubelet running on the worker nodes
    Value: !GetAtt EKSWorkerNodeRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-EKSWorkerNodeRole

  EKSNodeGroup:
    Description: The node group for EKS
    Value: !Ref EKSNodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-EKSNodeGroup

  JumpHostPublicIp:
    Description: Jump Host Public IP
    Value: !GetAtt JumpHost.PublicIp
    Export:
      Name: !Sub "${EnvironmentName}-JumpHostPublicIp"